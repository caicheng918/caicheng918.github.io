<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>《优秀的绵羊》书摘</title>
    <url>/2020/11/11/%E4%B9%A6%E6%91%98/</url>
    <content><![CDATA[<p>  人履历的竞赛,就如同两国之间的核武器竞赛。没有一个国家需要20000颗核弹,除非另外一个国家拥有19000颗核弹。没有人需要11项课外活动,除非另外位学生参加了10项课外活动,那么其真正目的是什么呢?唯一的答案就是超越他人。我们的孩子的发展就如同长颈鹿的头颈变得越来越长,变得越来越畸形。这代人在20年后会成为怎样的人这是可想而知的。</p>
<p>世界应该是公平的,但是现实却不尽如人意。人的基因也是不公平的,而且将永远不会公平。重建自己的生活是一种特权,有机会追随自己的热情是每个人最终应得的权利,即使公开反对这些不争的事实,我们也并不能使它们完全消失。我也认识到,我所提倡的并不适用于所有在顶尖大学就读的学生,更不用说适用于在非知名大学的学生了。尽管如此,问题的关键是:我所提倡的是否适用于你。如果是,你就应该为自己负责,而不是借用其他人的生活案例为自己找借口,逃脱应该承担的责任。</p>
<p>能者为何经常被埋没在大浪中,中庸之辈却手握大权?归其原因是因为,在这种体制下,上升的速度取决于个人在体制内周旋的娴熟程度,而非专业背景的卓越。奉承上司,排斥下属,积极出入鸡尾酒社交活动,善于官场术,充分借助大师余威狐假虎威,直到最后在背后插上刀。广交人脉的最好办法就是随波逐流人云亦云,不必为原则承担风险或者根本不需要原则。生活在某种体制下,你既不需要信奉该体制,也无须质疑它。你只需要成为他人希望看到的守业者,最终你将成为一名如作者康拉德笔下的那位负责人,那种内心空洞的人。</p>
]]></content>
      <tags>
        <tag>书摘</tag>
      </tags>
  </entry>
  <entry>
    <title>一些简单的想法</title>
    <url>/2021/02/21/%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%9A%84%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<p>我并不知道写这个对我有什么意义，但无意义的事已经够多了，也不差这一件事。毫无疑问，这是最近的一些事影响我的。这仅是个随笔，无任何深意。</p>
<p>如今刚过春节，气温却已经反常地到了二十度，然而从新闻上得知，某些国家却正遭受罕见的极寒天气，在过去的这一年里各种自然灾害频发，不知是由于网络信息传播力增强的缘故，总之一切似乎已经开始变得不寻常了。对我自己而言，我并不是一个乐观主义者，当人沉浸于享乐时，下一步就是危机。如果从整个地球46亿年的历史来看，人类的文明史不过弹指一挥间，在如此长的时间尺度上，没有随机事件，只有一些事有可能发生，那它就必然发生。我始终相信，人类的这种生命存在形式不过是漫长岁月中自然界相互磨合的结果，并非是上帝在离太阳合适的距离，创造了合适的水和温度 ，而是漫长岁月中生命适应了这种客观条件，因此我也相信“它们”的存在。但是，生命存在的意义是什么？</p>
<p>在食物链上，一个物种过于强大，就会导致另一些物种的衰败，甚至灭亡，所有物种都有使自己变强的本能。想到这些，我总会想起刘慈欣《三体》系列小说中的两条公理：1、生存是文明的第一需要。2、文明不断增长和扩张，但宇宙中的物质总量保持不变。事实证明，这两条公理的引申意义已经体现在人类社会的各个地方，用现在的话说就叫做“内卷”。</p>
<p>但是，从如此广大的视角来讨论个人的事情是无意义的。人首先是存在于生活环境，才能存在于宇宙，对于绝大多数的普通人来说，前者已经是全部了。</p>
<p>在我浅薄的世界观中，绝大部分的人生并不精彩，可以说非常平庸，虽然这也包含我自己。从第一声啼哭到最后一刻闭目，人们都会经历玩耍、教育、工作、结婚生子等等的事，繁育下一代固然是自然界不变的法则，但现在的人们不管由于何种途径，最终目的也就只有一个，money。这个想法直到现在我也认为过于片面，但当我试图引经据典反驳时，却发现反驳并没有意义。朝闻道，夕可死也。伟人之所以是伟人，很大原因是绝大多数人并不存在伟人的品质。</p>
<p>学习这件事既使人开拓视野，但更多的是提升学历，学历不过是更好的工作的敲门砖，难道有人工作是为了做慈善吗？如果是娱乐圈明星之流的慈善，那也如同资本家的福报罢了，但如果福报给的多，那可能很多人会趋之若鹜。年轻时的努力工作往往带来年老时的各种疾病，迫于生计和责任，又不得不让人这样做。</p>
<p>当人有了责任，就会不轻松，每个年龄有每个年龄的责任，苦中作乐俨然成了时代的色彩。改变世界这些想法仅存在于电视和童话中，大人物们屈指可数，现实会磨平所有人的棱角。但是，当人沉浸与享乐时，下一步就会面临危机，该上学该工作的时候不去做，那也如同废物，是会被这个时代的自然选择所遗弃，当理想与现实矛盾，作为一个普通人只能妥协罢了。以上，不过是一个平凡人的牢骚罢了。</p>
<p>我非常不认同学历高就等于品行高，因为已有许多的例子证实了这点，应试教育下的高考并不考思想品德，绝大部分人思想品德的蜕变往往是出了象牙塔之后的几年。思想最难改变的便是老人和我差不多大的年轻人，前者有着几十年的生活经验，思维早已固化，而后者往往年轻气盛，不会主动认错。</p>
<p>年轻人的思想固化在于他们很容易便被洗脑，由于没有生活经验，因此极其容易被包装的很好的别有用心之人利用，如同某站和某博上的部分年轻用户。正因为现在的我感到了非常困惑，因此我感受很深。凭借由于我不曾用过某博，而且其风评众所皆知，因此无需多言。我认为网络平台应该对其用户有约束能力（如同垃圾桶的垃圾漏了，垃圾桶有不可推卸的责任），而不是出了新闻才一封了之。</p>
<p>互联网时代，每一个能够上网的人都可以成为自媒体，隐匿在屏幕的背后，说着现实中不敢开口的话。在任何平台看一部电影都务必不能打开弹幕，当你在抨击别人傻的什么都看不懂的时候，又能否正证明自己未曾过度分析？当观赏一个时政新闻视频，总能看到两种对立观点泾渭分明，双方用词之激烈仿佛有深仇大恨。事实上这种争吵可以出现在任何一个交流平台上，最好的对待方式就是不去评论，因为除了让肾上腺素飙升外毫无意义。我始终坚信一句话，没有调查就没有发言权。对于很多人来说，他们的“调查”不过是在知识区看的几个视频而已，许多“学术讨论”仅有论点而没有论据，倘若依靠表情和标点符号就能做到有理有据，那至少娱乐的作用是有了。</p>
<p>面对自己不懂的事情，应当辩证地去看待。看一个时政评论，并不代表我一定认可它的说法，只是学习一种新的角度，人外有人天外有天，了解的多总没有坏处。若是他说错了，恰恰是得深入调查才能有发言权。当然，吸人眼球的暴论已经很多了，娱乐至上的年代，最简单的方法只有多读书。</p>
<p>人生很多事都是没有短期意义的，但如果能证明它在未来有作用那也是有意义的。买菜当然用不到高等数学，买菜用得到只是小学数学，若是用如此简单的事来证明高数无用，本身就是站不住脚的，此时没有显露出它的短期意义，待到考研时时便会出现。物以类聚人以群分，学历最直观的作用就是体现在每个人的朋友圈。</p>
<p>人的外表和内心世界是两回事，以貌取人是非常幼稚的做法，如同对历史人物们分个好坏一样。娱乐圈人们的粉丝们已经无数次证明了这点。</p>
<p>我的书柜里有很多书，大多都只是粗略看过，一些是由于已经没了购买时的兴趣，这只能归咎于我做很多事只有三分钟热度；另一些则是过于困难了，事实上当我买这些书的时候就想到了会有看不下去的时候，高中水平的我便买了十多本大学化学的教材自学，事实证明错误估计自己的实力是危险的，这些超前的知识并未给我带来多大的优势，自然最后的成绩也不怎么样。到了大学，这些知识便更没什么用了，因为一个很简单的原因，所以我选的专业跟化学一点也不沾边，这些书我便从未看过了，它们如同角落那把心血来潮买的吉他一样，已经积了一层灰了。</p>
<p>我能清晰回忆起当初买它们时的想法，就像现在我所做的一些事一样。过了这么多年，我已经学会决定一件事之前必备的深思熟虑，我总会设想一个能接受的最低要求和一个最坏的后果。对于未来，大方向可以预见，而细枝末节的事，以后再想是最好的了。</p>
<p>空持百千偈,不如吃茶去。</p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下编程准备</title>
    <url>/2020/11/11/Linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<h1 id="一、在Linux下进行编程-必须知道Linux的root密码，不一定是开机密码，忘记见注明"><a href="#一、在Linux下进行编程-必须知道Linux的root密码，不一定是开机密码，忘记见注明" class="headerlink" title="一、在Linux下进行编程(必须知道Linux的root密码，不一定是开机密码，忘记见注明)"></a>一、在Linux下进行编程(必须知道Linux的root密码，不一定是开机密码，忘记见注明)</h1><p>打开Linux，在命令行里面操作<br>1.打开命令行获得root权限 :<br><code>su root</code><br>2.输入root密码<br>3.安装emacs编辑器(需要联网):<br><code>sudo yum install emacs</code><br>4.都安装完成后打开emacs即可编写程序，编写完后保存为后缀为.c的文件<br>5.命令行编译如:<br><code>gcc hello.c -o hi</code><br><code>./hi</code></p>
<h1 id="二、在windows下外挂Xshell进行编程"><a href="#二、在windows下外挂Xshell进行编程" class="headerlink" title="二、在windows下外挂Xshell进行编程"></a>二、在windows下外挂Xshell进行编程</h1><p>先在Linux下设置如下<br>1.打开命令行获得root权限:<br><code>su root</code><br>2.开启远程控制ssh服务:<br>首先安装ssh(需要联网):<br><code>yum install openssh-server</code><br>启动ssh:<br><code>systemctl start sshd.service</code><br><code>systemctl enable sshd.service</code><br>3.得到ip地址<br>命令行:ifconfig -f<br>2.打开Xshell<br>新建会话，在服务里面的主机处设置为Linux的ip地址，连接。出现established提示成功。</p>
<p>总结:<br>学校机房的电脑已经设置了ssh服务，但是不会告诉我们root密码，所以只能用外挂Xshell来进行操作，这其实与Linux下进行操作差不多。但出于学习目的，还是有必要装虚拟机从而直接在Linux下进行编程，这就不存在root密码的问题了，自己想怎么设置就怎么设置。</p>
<p>注明:<br>1.修改root密码命令:<br><code>\#sudo su</code><br><code>\#passwd root</code></p>
<p>2.外挂Xshell后，C源文件最后必须要空一行。(很迷)</p>
]]></content>
      <tags>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>合理使用浏览器插件和脚本</title>
    <url>/2020/12/06/%E5%90%88%E7%90%86%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6%E5%92%8C%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>插件是个好东西，脚本也是个好东西。</p>
<p>它们可以让用户更好更方便地使用浏览器，插件功能众多，从简单的即时翻译到白嫖某些付费内容，都可以通过插件和脚本做到。<br>PC端仅推荐使用<strong>chrome浏览器</strong>和<strong>新版edge(基于Chromium)浏览器</strong>，不推荐<strong>国产的所有浏览器</strong>，手机端支持扩展插件的有Yandex，X浏览器等。<br>安装扩展插件，需要从浏览器的应用商店下载。由于众所周知的原因，chrome浏览器在国内使用不太方便，所以以下教程以edge为例(chrome同理)。</p>
<h1 id="一、安装浏览器插件"><a href="#一、安装浏览器插件" class="headerlink" title="一、安装浏览器插件"></a>一、安装浏览器插件</h1><p>在浏览器菜单里找到扩展选项，进入后点击”获取浏览器插件”，进入浏览器应用商店。选择需要的插件安装即可。以下是我认为的几个好用的插件。</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/101/image-20201206090036650.png" alt="image-20201206090036650"></p>
<p>1、Tempermonkey(油猴)<br>大名鼎鼎的油猴插件，可以用其安装很多的脚本。安装脚本网站<a href="https://greasyfork.org/zh-CN/scripts%E3%80%82">https://greasyfork.org/zh-CN/scripts。</a></p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/101/image-20201206090115537.png" alt="image-20201206090115537"></p>
<p>2、AdBlocks(广告拦截插件)<br>可以有效减少大部分网站的页面广告，也可以主动标识广告清除，还可以有效解决使用百度搜索后，结果全是百家号的问题。</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/101/image-20201206090219290.png" alt="image-20201206090219290"></p>
<p>3、划词翻译<br>功能如其简介，但是有一点不错，在打开浏览器后，可以在其他应用里使用快捷键翻译复制的文本。</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/101/image-20201206090309304.png" alt="image-20201206090309304"></p>
<p>4、infinity(新标签页)<br>重新布局你的新标签页，还可以将其作为主页。(反正我是看着各种各样的导航页面很不爽)</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/101/image-20201206090433028.png" alt="image-20201206090433028"></p>
<p>注:安装插件，也可以通过下载crx文件或者插件压缩包，打开开发者模式，拖动到插件管理页面的方式来安装。</p>
<h1 id="二、安装脚本"><a href="#二、安装脚本" class="headerlink" title="二、安装脚本"></a>二、安装脚本</h1><p>需要在浏览器安装了Tempermonkey(油猴)插件后才能安装脚本，点击<a href="https://greasyfork.org/zh-CN/scripts%E3%80%82">https://greasyfork.org/zh-CN/scripts。</a></p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/101/image-20201206090642288.png" alt="image-20201206090642288"></p>
<p>然后选择需要的脚本，点击安装。安装后，可以点击浏览器地址栏右边的油猴标志，点击管理面板查看已安装的脚本。</p>
<p>一些脚本可能需要捐助或者关注公众号，至于是否使用就看个人需求了。</p>
<p>当油猴标志为灰色时，表示当前页面无可用的脚本。为黑色时并且左下角出现数字，表示当前页面有脚本开启，数字为启用的脚本数量。</p>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo和Github搭建个人博客</title>
    <url>/2020/11/11/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CVercel%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p><u>注：由于gitee访问速度较慢，需要手动部署，以及一些其他原因，本站已改为github+vercel部署的方式，教程仅供参考</u></p>
<p>仅为个人经验总结，应该有更好的搭建方式。</p>
<h1 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h1><p>在开始配置之前，需要下载以下几个程序：</p>
<p>1、Git  </p>
<p>2、node  </p>
<p>3、Typora （非必需，用来编辑博客，可用其他编辑器，也可搭建完成后再安装）</p>
<p>建议直接到官网下载。</p>
<p>4、notepad++，或者直接用记事本，或其他文本编辑器，修改配置文件时使用</p>
<h1 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h1><p>windows10使用控制终端操作，快捷键：win+R，搜索cmd打开</p>
<p>1、安装node后可以通过如下命令检查是否安装成功：</p>
<p><code>node -v    #查看node版本</code><br><code>npm -v    #查看npm版本</code></p>
<p>2、安装淘宝的cnpm</p>
<p><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code>    </p>
<p>检查版本：</p>
<p><code>cnpm -v</code></p>
<p>3、安装hexo框架</p>
<p><code>cnpm install -g hexo-cli</code>    </p>
<p>检查版本：</p>
<p><code>hexo -v</code>    </p>
<p>4、在任意位置创建blog文件夹（名字也随意，不一定是blog），用来放本地博客的数据和文件。如我在H盘创建了blog，地址如：H:\blog。</p>
<p>创建完成后，打开Git CMD（Git正确安装的话，应该在开始菜单内）</p>
<p>使用命令进入创建的这个blog文件夹，例如：</p>
<p><code>C:\Users\cai&#39;cheng&gt;H:</code></p>
<p><code>H:\&gt;cd blog\</code></p>
<p>无误后输入如下代码，进行配置（此步可能花费很长时间，如失败或退出，删除该这个blog文件夹，重来）：</p>
<p><code>hexo init</code></p>
<p>待出现 “Start blogging with Hexo！”后，即代表成功。此时blog下会出现很多文件（大概八个），这就是以后操作博客的地方。</p>
<p>5、验证是否成功：</p>
<p><code>hexo s  #启动服务</code></p>
<p>（1）待出现提示”Hexo is running at <a href="http://localhost:4000/">http://localhost:4000</a>. Press Ctrl+C to stop”后即代表成功，其他提示则错。</p>
<p>（2）打开浏览器地址栏输入localhost:4000，出现hexo的页面则代表你的blog创建成功，但这一步是本地预览，还未托管成功，别人在网上看不到。如下：</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/102/20200313180932972.png" alt="20200313180932972.png"></p>
<p>注：如第（1）步成功，第（2）步失败，代表4000端口被占用，返回Git CMD先按Ctrl+C退出服务，输入：</p>
<p> <code>hexo s -p 5000  #以5000端口启动服务</code></p>
<p>再在浏览器输入localhost:5000，就能进入页面。</p>
<h1 id="上传到Github-Pages"><a href="#上传到Github-Pages" class="headerlink" title="上传到Github Pages"></a>上传到Github Pages</h1><p>1、首先安装插件：</p>
<p> npm install hexo-deployer-git –save</p>
<p>2、、在自己的<a href="https://github.com/">Github</a>主页创建一个新的<code>repository</code>。创建的repository的名字必须为 <code>yourname.github.io</code>。注意替换yourname。</p>
<p>3、设置Git的SSH。</p>
<p>回到博客根目录的git bash中，输入</p>
<p><code>git config --global user.name &quot;yourname&quot;</code><br><code>git config --global user.email &quot;youremail&quot;</code></p>
<p>然后创建SSH,一路回车</p>
<p><code>ssh-keygen -t rsa -C &quot;youremail&quot;</code></p>
<p>成功生成后一般会在C盘user文件夹里找到.ssh这个文件夹，里面的id_rsa.pub文件就是SSH密钥。</p>
<p>将这个密钥复制下来，在Github的SSH设置里面填入这个密钥，保存后才能部署成功</p>
<p>4、在本地hexo目录下的config_yml里定位到deploy编辑成如下格式，注意冒号有一个空格，必须严格按照格式填写。</p>
<p><code>deploy:</code></p>
<p>   <code>type:  git</code> </p>
<p><code>   repository:  http://github.com/yourname/yourname.github.io.git</code> </p>
<p><code>  branch:  master</code></p>
<p>5、需要部署时在博客根目录Git bush使用以下三件套命令：</p>
<p><code>hexo clean #清除缓存</code></p>
<p><code>hexo g</code> </p>
<p><code>hexo d #推送到远端仓库</code></p>
<p>6、本地测试时在博客根目录Git bush使用命令：</p>
<p><code>hexo s</code> </p>
<p>出现<code>Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code>时则可以在浏览器打开<a href="http://localhost:4000进行测试。">http://localhost:4000进行测试。</a></p>
<p>如果在浏览器不能打开<a href="http://localhost:4000，则代表4000端口被占用，需要使用其他端口，以5000为例：">http://localhost:4000，则代表4000端口被占用，需要使用其他端口，以5000为例：</a></p>
<p><code>hexo s -p 5000 #以端口5000进行本地测试。</code></p>
<p>本地测试时可以改动博客的代码或文件，仅需在浏览器刷新就能看到改动，因此更新博客时最好在本地测试无误后再上传。</p>
<h1 id="编写博客并上传"><a href="#编写博客并上传" class="headerlink" title="编写博客并上传"></a>编写博客并上传</h1><p>1、如果没安装，可以安装Typora了，这是一个常用的编辑器，具体功能自行探索。</p>
<p>2、安装好后，在blog根目录下打开Git Bush Here，（下文均默认此操作），输入新建文章命令：</p>
<p><code>hexo n &quot;文章名&quot;</code>   #，如“hexo n “第一篇文章”</p>
<p>此时，会在source文件夹里的_posts文件夹里生成 “第一篇文章.md”的文件，双击它可调用Typora进行编写。</p>
<p>其中，title是文章标题，time是生成时间，tags是标签（没有tags暂时不管），然后是正文。编写完后即保存。</p>
<p>注：当你编辑一个新文件完成后，必须将此文件保存到/blog/source/_posts/路径下，不然不能上传博客。</p>
<p>在Git Bush Here里面输入：</p>
<p><code>hexo d</code></p>
<p>即可更新到github。</p>
<h1 id="使用Vercel部署并绑定域名"><a href="#使用Vercel部署并绑定域名" class="headerlink" title="使用Vercel部署并绑定域名"></a>使用Vercel部署并绑定域名</h1><p>使用Vercel部署的好处一是快，二是每当push到github时，Vercel会自动同步，省去了手动部署的麻烦，部署完成还会发送邮件通知。</p>
<p>1、前往<a href="https://vercel.com/%E6%B3%A8%E5%86%8C%EF%BC%8C%E6%B3%A8%E5%86%8C%E6%97%B6%E9%80%89%E6%8B%A9%E7%BB%91%E5%AE%9Agithub%E3%80%82">https://vercel.com/注册，注册时选择绑定github。</a></p>
<p>2、创建新项目，选择导入github的博客仓库。</p>
<p>3、在域名提供商处将域名解析到Vercel的DNS地址。</p>
<p>4、在setting里选择domain，填入自己的域名，确定。</p>
<p>5、过一会便能通过此域名访问博客。更新时只需要照常hexo d到github即可，Vercel会自动同步部署。</p>
<h1 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h1><p>由于建立博客后的初始主题很难看，所以应当换个主题。不同的主题配置方式都不太相同，需要自己修改主题配置文件，所以需要自己去动手了解。官方主题网站：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> ， 选择好后跳转到github下载。好看的有butterfly，next等。以Jerry开发的主题butterfly为例：</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/102/image-20201129220151788.png" alt="image-20201129220151788.png"></p>
<p>在GitHub下载ZIP文件后（或者本地clone仓库），解压。</p>
<p>将文件夹复制到/blog/themes下，然后回到blog\根目录下，用记事本打开_config.yml文件，在最后找到这三行代码：</p>
<p><code>Extensions</code></p>
<p><code>Plugins: https://hexo.io/plugins/</code></p>
<p><code>Themes: https://hexo.io/themes/</code></p>
<p><code>theme: butterfly</code></p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/102/image-20201129220401269.png" alt="image-20201129220401269.png"></p>
<p>将上方theme后的代码改为下载主题的 文件夹的文件名，其他不改，注意空格，如改为Next主题：</p>
<p><code>Extensions</code></p>
<p><code>Plugins: https://hexo.io/plugins/</code></p>
<p><code>Themes: https://hexo.io/themes/</code></p>
<p><code>theme: Next</code></p>
<p>完成后点击保存。回到Git Bush Here输入：</p>
<p><code>hexo g    #生成</code></p>
<p><code>hexo d</code></p>
<p><code>hexo clean    #清理hexo缓存</code></p>
<p><code>hexo g --d  #一键部署</code></p>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Github和jsDeliver作为图床</title>
    <url>/2021/02/28/%E4%BD%BF%E7%94%A8Github%E5%92%8Cjsdelivr%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="创建专门的图片仓库"><a href="#创建专门的图片仓库" class="headerlink" title="创建专门的图片仓库"></a>创建专门的图片仓库</h1><p>1、在github新建一个public的repositories，名称随意。</p>
<p>2、在本地新建一个文件夹，将仓库clone到本地。</p>
<p><code>git clone 仓库链接</code></p>
<p>3、在此文件夹根目录git bush，依次输入以下代码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status &#x2F;&#x2F; 查看状态 </span><br><span class="line">git add . &#x2F;&#x2F; 注意英文句号</span><br><span class="line">git commit -m &#39;注释&#39; &#x2F;&#x2F; 提交更新</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p> 4、在此repositories里进行Releases，填写版本号（自定义），例如填写版本号1.0.0，以public方式发布。</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/103/1031.jpg" alt="1031"></p>
<p>5、在文章或代码内引用时，必须以如下方式引用（版本号不写也可）：</p>
<p><code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code></p>
<p>例如引用我的一张图片：</p>
<p><code>https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.2/101/image-20201206090642288.png</code></p>
<h1 id="快捷使用PIcGo上传图片"><a href="#快捷使用PIcGo上传图片" class="headerlink" title="快捷使用PIcGo上传图片"></a>快捷使用PIcGo上传图片</h1><p>1、PicGo下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p>
<p>2、安装完成后，在github的头像处点击setting，选择Developer setting，再选择Personal access tokens，然后点击Generate new token，勾选repo项，然后点击Generate token。</p>
<p>3、复制这个token。打开PicGo，在图床设置里找到Github图床，如图设置：</p>
<p><img src= "https://cdn.jsdelivr.net/gh/caicheng918/CDN@2.3/photo/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/caicheng918/CDN/photo/20210301143247.png" alt="1033"></p>
<p><code>仓库名：用户名/仓库名</code></p>
<p><code>分支名：main/master（自行查看）</code></p>
<p><code>Token：复制的token</code></p>
<p><code>存储路径：仓库存储路径</code></p>
<p><code>自定义域名：https://cdn.jsdelivr.net/gh/用户名/图床仓库名。</code></p>
<p>上传完成后在相册里可以找到完整的url，然后引用即可。</p>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
</search>
